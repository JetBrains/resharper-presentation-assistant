<Window x:Class="JetBrains.ReSharper.Plugins.PresentationAssistant.PresentationAssistantWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:pa="clr-namespace:JetBrains.ReSharper.Plugins.PresentationAssistant"
        mc:Ignorable="d"
        Width="Auto" Height="Auto"
        ShowActivated="False"
        ShowInTaskbar="False"
        Focusable="False"
        Background="{DynamicResource {x:Static pa:PresentationAssistantThemeColor.PresentationAssistantWindowBackgroundBrushKey}}"
        Foreground="{DynamicResource {x:Static pa:PresentationAssistantThemeColor.PresentationAssistantWindowForegroundBrushKey}}"
        FontSize="24"
        FontFamily="Segoe UI"
        WindowStyle="None"
        ResizeMode="NoResize"
        SizeToContent="WidthAndHeight"
        AllowsTransparency="True"
        Topmost="True"
        Opacity="0.8"
        d:DataContext="{x:Static pa:SampleData.MultiplierShortcut}">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Bottom" />
        </Style>
        
        <Style x:Key="Keyboard" TargetType="ContentControl">
            <Setter Property="Margin" Value="0,0,3,0" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border BorderThickness="1" BorderBrush="Black" CornerRadius="4" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="3,6,17,1">
                            <Viewbox Stretch="Uniform" Height="19" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                <ContentPresenter />
                            </Viewbox>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ShortcutDetailsItemsStyle" TargetType="ItemsControl">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Margin="2,0,0,0">
                            <TextBlock x:Name="SeparatorTextBlock" Text=", " />
                            <ContentPresenter Content="{Binding}"/>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="SeparatorTextBlock" Value="Collapsed" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type pa:ShortcutSequence}">
            <ItemsControl ItemsSource="{Binding Details}" Style="{StaticResource ShortcutDetailsItemsStyle}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type pa:ShortcutDetails}">
            <StackPanel Orientation="Horizontal">
                <!-- This is the order they appear in menus - Control Shift Alt -->
                <ContentControl Visibility="{Binding HasControl, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource Keyboard}">ctrl</ContentControl>
                <ContentControl Visibility="{Binding HasShift, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource Keyboard}" Background="Red">
                    <Canvas Width="300" Height="300" Margin="0,100,000,70">
                        <Path Fill="Black" Stroke="Black" StrokeThickness="20" StrokeLineJoin="Miter"
                              Data="m 36.585196 146.0422 h 55.474 v 123.961 H 208.0222 v -123.961 h 55.473 L 150.0402 20.039203 36.585196 146.0422 z M 150.0402 8.0862029 281.4572 154.0402 h -65.438 v 123.96 H 84.061196 v -123.96 h -65.438 L 150.0402 8.0862029 z" />
                    </Canvas>
                </ContentControl>
                <ContentControl Visibility="{Binding HasAlt, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource Keyboard}">alt</ContentControl>
                <TextBlock Text="{Binding Key}" VerticalAlignment="Bottom" />
            </StackPanel>
        </DataTemplate>
    </Window.Resources>

  <!-- Dark theme colours: Black border + #FF497549 background-->
  <!-- Light theme colours: border? + #FFBAEEBA background -->

    <Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static pa:PresentationAssistantThemeColor.PresentationAssistantWindowBorderBrushKey}}" Padding="10 5 10 5">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
            <!-- Don't mess with the formatting of the tags! -->
            <TextBlock Text="{Binding Path, Mode=OneTime}" />
            <TextBlock FontWeight="Bold" Text="{Binding Text, Mode=OneTime}" ToolTip="{Binding ActionId, Mode=OneTime}" />
            <TextBlock Visibility="{Binding HasShortcuts, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}}" xml:space="preserve"> via <InlineUIContainer BaselineAlignment="TextBottom">
                    <ContentControl Content="{Binding VsShortcut, Mode=OneTime}" /></InlineUIContainer></TextBlock>
            <TextBlock Visibility="{Binding HasIntellijShortcuts, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}}" xml:space="preserve"> (<InlineUIContainer BaselineAlignment="TextBottom">
                    <ContentControl Content="{Binding IntellijShortcut, Mode=OneTime}" /></InlineUIContainer> for IntelliJ)</TextBlock>
            <TextBlock Visibility="{Binding HasMultiplier, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}}" xml:space="preserve"> &#x00d7;<Run Text="{Binding Multiplier, Mode=OneTime}"></Run></TextBlock>
        </StackPanel>
    </Border>
</Window>
